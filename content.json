{"meta":{"title":"は永遠に不滅である","subtitle":"击碎你沉睡的灵魂！","description":"For Study","author":"4riH04X","url":"http://example.com","root":"/"},"pages":[{"title":"404","text":"","path":"404/index.html","date":"11-02","excerpt":""},{"title":"About Me","text":"0.论前世，不问来者热爱学习的小菜鸡、又菜又爱玩的小菜鸡、一窍不通但一腔热血的小菜鸡…… 一句话送给此时的我和此时正在看的你： “种一棵树最好的时间是十年前，其次是现在！” 1.个人简介船带网安学子一枚，手贱高考还填报了法学专业，因此笨人是“高贵”的网安法双学位学生。 见笑了，没学过法律的小菜鸡。 喜欢数据分析，二进制安全。另外引师傅们的自我介绍：“自学二进制漏洞，是个 pwn 究极菜鸡” 但足够热爱，足矣。又想起两句话： “有人问我，你害怕死亡吗？” “答曰：若立足年成天地之魄，死又何妨” 当坚持热爱每一天的生活，当把每分每秒塞满时，这是极其幸福的。 2.ID解读4riH04X，疯癫之意，希望能不顾牲命，H04X即是HOAX疯狂、疯癫。 “即是我认定的巅峰，无顾艰辛，亦为此疯癫，纵千年无名” 希望能以此 ID 自嘲并鼓励自己不顾他人眼光，自我陶醉吧！ ~“Past lives couldn’t ever hold me” ~”Don’t wake me, I’m not dreamin’” 3.未来展望借此博客的开辟，记录一下自己的学习体会和个人对一些知识浅薄的理解。更多的希望自己借此博客激励自己， “仰天大笑出门去，我辈岂是蓬蒿人！”","path":"about/index.html","date":"11-02","excerpt":""},{"title":"categories","text":"","path":"categories/index.html","date":"11-02","excerpt":""},{"title":"search","text":"","path":"search/index.html","date":"11-02","excerpt":""},{"title":"friends","text":"友人帐这些人都是巨佬，浅浅挂一下希望别骂我，，， tld 糊涂涂の博客","path":"friends/index.html","date":"11-05","excerpt":""},{"title":"links","text":"0.说明这里存放了一些实用的网站！！！持续更新，可以给我留言","path":"links/index.html","date":"11-05","excerpt":""}],"posts":[{"title":"PWN概述","text":"0X01 Pwn简介软件安全：软件安全专注于研究软件的设计和实现的安全研究对象：代码（源码、字节码、汇编等）研究目标：发掘漏洞、利用漏洞、修补漏洞研究技术：逆向工程、漏洞挖掘与利用、漏洞防御技术CTF PWN：软件安全研究的一个缩影 研究对象：可执行文件，主要是ELF文件研究最终目标：夺取Flag软件安全与CTF PWN特点：入门难、进阶难、精通难。 工具：静态分析：IDA Pro动态调试：gdb(with peda or gef)、windbg、ollydbgExploit：pwntools、zio 前置技能：汇编语言：程序执行、函数栈帧、函数调用等编译、链接、装载、执行ELF文件结构Linux系统相关：文件描述符、系统调用、socket编程、shell命令编译原理，操作系统，计算机组成原理 0X02 PWN学习方法学习阶段一：学习套路套路是有限的，假以时日一定会学完的招式针对每种套路都练习1~2道习题学习完所有常见套路，大多数国内比赛的中档题基本都可以随便切 学习阶段二：总结套路，变套路为艺术漏洞利用是一门艺术，难以用套路完全概况，要想切难题不能全靠套路多刷刷国际赛的难题，刷的慢没关系，刷多了自然就会融会贯通多总结思考现有的套路的本质 资源：CTF Writeup Github：https://github.com/ctfs 聚合了各大国际比赛的习题文件以及writeupGoogling:XXX writeup or XXX CTF 百度收录不了github pages0X03 PWN 学习案例 ROP： 1、ROP：现代栈溢出中最基础的利用技术（最简单最基础的套路） 2、Googling 筛选到比较好的题目：r0pbaby 学习writeup，可以参考多篇writeup，根据writeup和学到的内容自己动手调试一下，尽量自己动手重写EXP 重写EXP成功：基本掌握了ROP。 第二章 CTF中漏洞挖掘的方法论：从逆向工程到漏洞挖掘0X01 逆向工程简介 对于PWN来说，逆向工程的主要作用为发掘与分析漏洞 工具： 静态分析工具：IDA pro动态调试工具：gdb、windbg、ollydbg、IDA ProIDA pro的F5大法 0X02 常见漏洞简介 在进行漏洞挖掘之前，必须对常见漏洞非常熟悉！！！ 缓冲区溢出（Buffer Overflow） 堆溢出、栈溢出、bss溢出、data溢出（通常覆盖指针）wellpwn、AliCTF 2016 vss、Hitcon 2015 readable、stkof、zerostorage整数溢出（Integer Overflow） 无符号型与有符号的转换（MMACTF 2016 shadow）整数加减乘除法，如malloc(size*2) (pwnhub.cn calc)整数溢出通常会进一步转换为缓冲区溢出、逻辑漏洞等其他漏洞格式化字符串（Format String） printf(s)、sprintf(s)、fprintf(s)等，可能导致任意地址读写（MMACTF 2016 greeting）可以用来leak（HCTF2016 fheap）释放后使用（Use-After-Free） 释放掉的内存可能会被重新分配，释放后使用会导致重新分配的内存被旧的使用所改写Double free是一种特殊的UAFDefcon 2014 Qualifier shitsco、AliCTF 2016 router、0CTF2016 freenote（double free）、HCTF2016 fheap（double free）逻辑漏洞 访问控制、协议漏洞、多线程竞态条件（fake fuzz）等0X03 漏洞挖掘中的逆向技巧 关键数据结构分析：还原结构体、接口、类等 控制流分析：理清楚程序的执行逻辑，基本要做到从反汇编代码到源码的还原 数据流分析：理清楚数据的流向 CTF漏洞挖掘中的分析策略： 目标文件较小时，通常采用对整个目标文件进行控制流分析，做到整个程序从反汇编代码到接近源码级别的还原，还原的同时查找漏洞目标文件较大时，逆向整个文件所需工作量太大，通常需要额外的关注数据流，并理清楚数据流所经之处的控制流，因为漏洞的触发与数据流离不开关系无论是数据流分析和控制流分析，还原结构体、接口、类都会促进逆向工程控制流分析的主要作用是理清楚程序的逻辑，对于规模较小的目标文件，一般选择理清整个目标文件。 代码以识别为主，不要硬逆。 善用标记，标记结构体、标记变量名、标记变量类型 F5大法好，但是F5不是万能的，当发现F5结果比较诡异时需要在汇编层分析（如mmactf 2016 shadow） 数据流分析 目标文件较大，全盘逆向不现实 追溯用户输入的走向，重点关注对用户输入数据处理的函数可以在不用逆清楚控制流即可找到漏洞，需要一定的技巧性 （plaid CTF 2015 datastore） 原文链接：https://blog.csdn.net/prettyX/article/details/103173220","path":"PWN概述/","date":"11-05","excerpt":"","tags":[{"name":"Pwn","slug":"Pwn","permalink":"http://example.com/tags/Pwn/"}]},{"title":"我的第一篇博客","text":"​ 总觉得生活里缺少点什么，就以此来填充一下我的枯燥生活吧。","path":"My-first-Boke/","date":"11-02","excerpt":"","tags":[{"name":"About Me","slug":"About-Me","permalink":"http://example.com/tags/About-Me/"}]},{"title":"基于HEXO的写博客tips","text":"1.links怎么放好友链接，看这里 優萌初華 琉璃的医学 & 编程笔记 優萌初華 https://shoka.lostyu.me 優萌初華 琉璃的医学 & 编程笔记 2.code 代码块 使用 markdown-it-prism 进行代码高亮，支持显示行号、行高亮 mark 、命令行提示符 command 、代码块标题。$$基本格式： [language] [title] [url] [link text] [mark] [command]$$ 举个栗子： 行高亮参考链接 mark:1,6-7123456import java.util.Scanner;...Scanner in = new Scanner (System.in);// 输入 Scan 之后，按下键盘 Alt + “/” 键，Eclipse 下自动补全。System.out.println (in.nextLine ());System.out.println (&quot;Hello&quot; + &quot;world.&quot;); 命令行提示符 command:(\"[root@localhost] $\":1,9-10||\"[admin@remotehost] #\":4-6)1234567891011pwd/usr/home/chris/binls -latotal 2drwxr-xr-x 2 chris chris 11 Jan 10 16:48 .drwxr--r-x 45 chris chris 92 Feb 14 11:10 ..-rwxr-xr-x 1 chris chris 444 Aug 25 2013 backup-rwxr-xr-x 1 chris chris 642 Jan 17 14:42 deploygit add -Agit commit -m &quot;update&quot;git push 3.表情包emoji 绘文字 本功能基于 markdown-it-emoji ，所有标签参考戳此：markdown-it-emoji&#x2F;lib&#x2F;data&#x2F;full.json at master · markdown-it&#x2F;markdown-it-emoji (github.com) 命令行提示符 command:(\"[root@localhost] $\":1,9-10||\"[admin@remotehost] #\":4-6)123kissing_heart:ring:notes: 如：:kissing_heart: :ring: 4.文字特效本功能基于 markdown-it-ins 、 markdown-it-bracketed-spans 和 markdown-it-attrs 本主题风格颜色通用样式：default、primary、success、info、warning、danger 命令行提示符 command:(\"[root@localhost] $\":1,9-10||\"[admin@remotehost] #\":4-6)12345678910111213141516171819202122++ 下划线 ++++ 波浪线 ++&#123;.wavy&#125;++ 着重点 ++&#123;.dot&#125;++ 紫色下划线 ++&#123;.primary&#125;++ 绿色波浪线 ++&#123;.wavy .success&#125;++ 黄色着重点 ++&#123;.dot .warning&#125;~~ 删除线～～~~ 红色删除线～～&#123;.danger&#125;== 荧光高亮 ==[赤橙黄绿青蓝紫]&#123;.rainbow&#125;[红色]&#123;.red&#125;[粉色]&#123;.pink&#125;[橙色]&#123;.orange&#125;[黄色]&#123;.yellow&#125;[绿色]&#123;.green&#125;[靛青]&#123;.aqua&#125;[蓝色]&#123;.blue&#125;[紫色]&#123;.purple&#125;[灰色]&#123;.grey&#125;快捷键 [Ctrl]&#123;.kbd&#125; + [C]&#123;.kbd .red&#125;H~2~029^th^ 这段代码因为自动被 pangu.js 处理了一下，加了几个空格，导致直接复制代码不能正常显示。正确的代码是 ++下划线++ 删除线 &#x3D;&#x3D;荧光高亮&#x3D;&#x3D; ，不能有空格哦。","path":"pagetags/","date":"11-02","excerpt":"","tags":[{"name":"博客说明","slug":"博客说明","permalink":"http://example.com/tags/%E5%8D%9A%E5%AE%A2%E8%AF%B4%E6%98%8E/"}]},{"title":"基于hexo和shoka的博客使用教程","text":"1.hexo官方教程Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Create a new post命令行提示符 command:(\"[root@localhost] $\":1,9-10||\"[admin@remotehost] #\":4-6)1hexo new &quot;My New Post&quot; More info: Writing Run server命令行提示符 command:(\"[root@localhost] $\":1,9-10||\"[admin@remotehost] #\":4-6)1hexo server More info: Server Generate static files命令行提示符 command:(\"[root@localhost] $\":1,9-10||\"[admin@remotehost] #\":4-6)1hexo generate More info: Generating Deploy to remote sites命令行提示符 command:(\"[root@localhost] $\":1,9-10||\"[admin@remotehost] #\":4-6)1hexo deploy More info: Deployment 2.参考博客个人博客搭建完整版笔记 | pitt1997 &#x3D; &#x3D; 真正的大师永远都怀着一颗学徒的心 早教级别教你使用Hexo和GitHub Pages搭建属于自己的静态博客 - 搭建博客 - 前端设计 | MyBlog &#x3D; MqyGalaxy | Blog &#x3D; 爱好ACG的温馨小窝 (moeqy.com) Step.3 界面显示 - Theme Shoka Documentation - 二进制杂谈 - 计算机科学 | Yume Shoka &#x3D; 優萌初華 &#x3D; 有夢書架 (lostyu.me) 3.Shoka的一些配置和说明我们已经完成 Hexo 默认安装以及部署，现在我们使用其他主题加载我们的个人博客。 Shoka 主题相关链接如下。 123456主题主页：https://shoka.lostyu.me/文档说明：https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/基本配置: https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/config/页面配置: https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/display/依赖插件: https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/dependents/ 4.发布博客 写一篇文章，步骤参考 创建文章其中 title 为文章的标题。 命令行提示符 command:(\"[root@localhost] $\":1,9-10||\"[admin@remotehost] #\":4-6)1hexo new &quot;title&quot; 执行完成后 hexo 会根据目录下 scaffolds&#x2F;post.md，在 source&#x2F;_posts 文件夹下创建一个名为 title.md 的文件。 123 --- title: hello-worlddate: 2023-11-23 01:03:24tags: --- balabala..... 接下来就可以正式开始写文章了。 部署文章命令行提示符 command:(\"[root@localhost] $\":1,9-10||\"[admin@remotehost] #\":4-6)123hexo g -chexo shexo d 执行完成之后再次访问就可以看到内容了～","path":"基于hexo和shoka的博客使用教程/","date":"11-02","excerpt":"","tags":[{"name":"博客说明","slug":"博客说明","permalink":"http://example.com/tags/%E5%8D%9A%E5%AE%A2%E8%AF%B4%E6%98%8E/"}]}],"categories":[],"tags":[{"name":"Pwn","slug":"Pwn","permalink":"http://example.com/tags/Pwn/"},{"name":"About Me","slug":"About-Me","permalink":"http://example.com/tags/About-Me/"},{"name":"博客说明","slug":"博客说明","permalink":"http://example.com/tags/%E5%8D%9A%E5%AE%A2%E8%AF%B4%E6%98%8E/"}]}